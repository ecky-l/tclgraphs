## node.test (created by Tloona here)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}
tcltest::configure -verbose {pass}

if {$tcl_platform(platform) eq "windows"} {
    load tclgraphs.dll
}

package require tclgraphs
namespace import tclgraphs::*

#### fixtures
set createTwoNodes {
    graph g
    node create n1
    node create n2
    set result {}
}

set deleteTwoNodes {
    n1 delete
    n2 delete
    g delete
    unset -nocomplain result
}
#### fixtures

###

test node-cmd-2.1.1 "create node via create" -setup {} -body {
    node create n
    info command n
} -cleanup {
    rename n {}
} -result n

###

test node-cmd-2.1.2 "create node via new" -setup {} -body {
    set n [node new]
    llength [info command $n]
} -cleanup {
    rename $n {}
} -result 1

###

test node-cmd-2.2 "delete node via node cmd" -setup {} -body {
    node create n -name "Note"
    lappend result [info commands n]
    node delete n
    lappend result [info commands n]
} -cleanup {unset result} -result {n {}}

###

test node-addtograph-2.1.1 "add node to graph via cmd" -setup {
    graph g
    node create n
} -body {
    node graphs n + g
    g nodes
} -cleanup {
    n delete
    g delete
} -result {n}

###

test node-addtograph-2.1.2 "add node to graph via node" -setup {
    graph g
    node create n
} -body {
    n graphs + g
    g nodes
} -cleanup {
    n delete
    g delete
} -result {n}

###

test node-addtograph-2.1.3 "add node to graph via node, retrieval via cmd" -setup {
    graph g
    node create n
} -body {
    node graphs n + g
    node graphs n
} -cleanup {
    n delete
    g delete
} -result g

###

test node-addtograph-2.1.4 "add node to graph, retrieve via node" -setup {
    graph g1
    graph g2
    node create n
} -body {
    n graphs + g1 g2
    n graphs
} -cleanup {
    n delete
    g1 delete
    g2 delete
} -result {g1 g2}
###

test node-addtograph-and-delete-2.2.1 "add and delete node removes node from graph" -setup $createTwoNodes -body {
    n1 graphs + g
    n2 graphs + g
    n1 delete
    g nodes
} -cleanup {
    n2 delete
    g delete
} -result {n2}

###

test node-addtograph-and-delete-2.2.2 "add and delete node leaves empty graph" -setup $createTwoNodes -body {
    n1 graphs + g
    n2 graphs + g
    lappend result [llength [g nodes]]
    n1 delete
    n2 delete
    lappend result [g nodes]
} -cleanup {
    g delete
    unset result
} -result {2 {}}

###

test node-label-2.3.1 "add label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    node labels n1
} -cleanup $deleteTwoNodes -result {mylab yourlab}

###

test node-label-2.3.2 "add label via node" -setup $createTwoNodes -body {
    n1 labels + mylab yourlab
    n1 labels
} -cleanup $deleteTwoNodes -result {mylab yourlab}

###

test node-label-2.3.3 "remove label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    set result [node labels n1]
    node labels n1 - mylab
    lappend result [node labels n1]
} -cleanup $deleteTwoNodes -result {mylab yourlab yourlab}

###

test node-label-2.3.4 "remove label via node" -setup $createTwoNodes -body {
    n1 labels + mylab yourlab
    set result [n1 labels]
    n1 labels - mylab
    lappend result [n1 labels]
} -cleanup $deleteTwoNodes -result {mylab yourlab yourlab}

test node-label-2.3.5 "remove all label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    set result [node labels n1]
    node labels n1 - yourlab mylab
    lappend result [node labels n1]
} -cleanup $deleteTwoNodes -result {mylab yourlab {}}
# cleanup

::tcltest::cleanupTests
return
