## node.test (created by Tloona here)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}
tcltest::configure -verbose {pass}

if {$tcl_platform(platform) eq "windows"} {
    load tclgraphs.dll
}

package require tclgraphs
namespace import tclgraphs::*

#### fixtures
set createTwoNodes {
    graph create g
    node create n1
    node create n2
    set result {}
}

set deleteTwoNodes {
    n1 delete
    n2 delete
    g delete
    unset -nocomplain result
}

set createThreeNodes {
    graph create g
    node create n1
    node create n2
    node create n3
    set result {}
    
}
set deleteThreeNodes {
    n1 delete
    n2 delete
    n3 delete
    g delete
    unset -nocomplain result
}

#### fixtures

###

test node-cmd-2.1.1 "create node via create" -setup {} -body {
    node create n
    info command n
} -cleanup {
    rename n {}
} -result n

###

test node-cmd-2.1.2 "create node via new" -setup {} -body {
    set n [node new]
    llength [info command $n]
} -cleanup {
    rename $n {}
} -result 1

###

test node-cmd-2.2 "delete node via node cmd" -setup {} -body {
    node create n -name "Note"
    lappend result [info commands n]
    node delete n
    lappend result [info commands n]
} -cleanup {unset result} -result {n {}}

###

test node-addtograph-2.1.1 "add node to graph via cmd" -setup {
    graph create g
    node create n
} -body {
    node graphs n + g
    g nodes get
} -cleanup {
    n delete
    g delete
} -result {n}

###

test node-addtograph-2.1.2 "add node to graph via node" -setup {
    graph create g
    node create n
} -body {
    n graphs + g
    g nodes get
} -cleanup {
    n delete
    g delete
} -result {n}

###

test node-addtograph-2.1.3 "add node to graph via node, retrieval via cmd" -setup {
    graph create g
    node create n
} -body {
    node graphs n + g
    node graphs n
} -cleanup {
    n delete
    g delete
} -result g

###

test node-addtograph-2.1.4 "add node to graph, retrieve via node" -setup {
    graph create g1
    graph create g2
    node create n
} -body {
    n graphs + g1 g2
    n graphs
} -cleanup {
    n delete
    g1 delete
    g2 delete
} -result {g1 g2}
###

test node-addtograph-and-delete-2.2.1 "add and delete node removes node from graph" -setup $createTwoNodes -body {
    n1 graphs + g
    n2 graphs + g
    n1 delete
    g nodes get
} -cleanup {
    n2 delete
    g delete
} -result {n2}

###

test node-addtograph-and-delete-2.2.2 "add and delete node leaves empty graph" -setup $createTwoNodes -body {
    n1 graphs + g
    n2 graphs + g
    lappend result [llength [g nodes get]]
    n1 delete
    n2 delete
    lappend result [g nodes get]
} -cleanup {
    g delete
    unset result
} -result {2 {}}

###

test node-label-2.3.1 "add label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    node labels n1
} -cleanup $deleteTwoNodes -result {mylab yourlab}

###

test node-label-2.3.2 "add label via node" -setup $createTwoNodes -body {
    n1 labels + mylab yourlab
    n1 labels
} -cleanup $deleteTwoNodes -result {mylab yourlab}

###

test node-label-2.3.3 "remove label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    set result [node labels n1]
    node labels n1 - mylab
    lappend result [node labels n1]
} -cleanup $deleteTwoNodes -result {mylab yourlab yourlab}

###

test node-label-2.3.4 "remove label via node" -setup $createTwoNodes -body {
    n1 labels + mylab yourlab
    set result [n1 labels]
    n1 labels - mylab
    lappend result [n1 labels]
} -cleanup $deleteTwoNodes -result {mylab yourlab yourlab}

###

test node-label-2.3.5 "remove all label via cmd" -setup $createTwoNodes -body {
    node labels n1 + mylab yourlab
    set result [node labels n1]
    node labels n1 - yourlab mylab
    lappend result [node labels n1]
} -cleanup $deleteTwoNodes -result {mylab yourlab {}}

###

test node-neighbors-2.4.1.1 "get neighbors" -setup $createTwoNodes -body {
    edge create e n1 -> n2
    n1 neighbors
} -cleanup $deleteTwoNodes -result n2

###

test node-neighbors-2.4.1.2 "get neighbors 2" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    lmap x {n2 n3} { expr { $x in [n1 neighbors] } }
} -cleanup $deleteThreeNodes -result {1 1}

###

test node-neighbors-2.4.1.3 "get neighbors 3" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    lmap x {n2 n3} { expr { $x in [n1 neighbors -all] } }
} -cleanup $deleteThreeNodes -result {1 1}

###

test node-neighbors-2.4.1.4 "get neighbors wron args" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n1 neighbors -xxx
} -cleanup $deleteThreeNodes -returnCodes error \
    -result {bad option "-xxx": must be -labels, -notlabels, or -all}

###

test node-neighbors-2.4.2.1 "get neighbors with label 1" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb hi
    n1 neighbors -labels world
} -cleanup $deleteThreeNodes -result n2

###

test node-neighbors-2.4.2.2 "get neighbors with label 2" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb world
    n1 neighbors -labels world foo
} -cleanup $deleteThreeNodes -result n2

###

test node-neighbors-2.4.2.3 "get neighbors with label 3" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb world
    lmap x {n2 n3} { expr { $x in [n1 neighbors -labels world] } }
} -cleanup $deleteThreeNodes -result {1 1}

###

test node-neighbors-2.4.3.1 "neighbors without label 1" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb hi
    n1 neighbors -notlabel world
} -cleanup $deleteThreeNodes -result n3

###

test node-neighbors-2.4.3.2 "neighbors without label 2" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb hi
    n1 neighbors -notlabel world blubb
} -cleanup $deleteThreeNodes -result {}

###

test node-neighbors-2.4.3.3 "neighbors without label 3" -setup $createThreeNodes -body {
    edge new n1 -> n2
    edge new n1 -> n3
    n2 labels + hello world foo bar
    n3 labels + blubb world
    n1 neighbors -notlabel world
} -cleanup $deleteThreeNodes -result {}

# cleanup

::tcltest::cleanupTests
return
