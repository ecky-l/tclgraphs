# Commands covered:  graph edge node
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 2000 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}
tcltest::configure -verbose {pass}

if {$tcl_platform(platform) eq "windows"} {
    load tclgraphs.dll
}

package require tclgraphs
namespace import tclgraphs::*

###

test graph-1.1 "create and delete a graph" -setup {} -body {
    tclgraphs::graph g
    expr { [info command g] != {} }
} -cleanup {
    rename g {}
} -result {1}

###

test graph-1.2 "create graph with name" -setup {} -body {
    tclgraphs::graph g -name "Graf"
    g cget -name
} -cleanup {
    rename g {}
} -result {Graf}

###

test graph-addnode-1.1 "add node to graph via graph" -setup {
    tclgraphs::graph g
    tclgraphs::node create n
} -body {
    g addnode n
    g nodes
} -cleanup {
    n delete
    g delete
} -result {n}

###

test graph-addnode-1.2 "add node to graph via graph" -setup {
    tclgraphs::graph g
    tclgraphs::node create n1
    tclgraphs::node create n2
    tclgraphs::node create n3
} -body {
    g addnode n1 n2 n3
    llength [g nodes]
} -cleanup {
    n1 delete
    n2 delete
    n3 delete
    g delete
} -result {3}


###

test graph-addnode-and-delete-1.3 "delete graph deletes nodes with -nodes flag" -setup {
    tclgraphs::graph g
} -body {
    namespace import ::tclgraphs::node
    g addnodes [node new] [node new] [node new]
    lappend result [llength [g nodes]]
    g delete -nodes
    lappend result [info commands ::tclgraph::Node*]
} -cleanup {
    unset result
} -result {3 {}}

###

test graph-addnode-and-delete-1.4 "delete node from graph" -setup {
    graph g
    node create n1
    node create n2
    node create n3
} -body {
    g addnodes n1 n2 n3
    lappend result [llength [g nodes]]
    n1 graphs - g
    lappend result [info commands n1] [llength [g nodes]]
} -cleanup {
    unset result
    g delete -nodes
    n1 delete
} -result {3 n1 2}

###


# cleanup
::tcltest::cleanupTests
return
